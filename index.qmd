---
title: "Eighth Summer School on Statistical Methods for Linguistics and Psychology"
subtitle: "Advanced methods in frequentist statistics with Julia"
author: "Phillip Alday, Reinhold Kliegl and Douglas Bates"
engine: julia
julia:
  exeflags: ["--project", "--threads=auto"]
---

This site provides materials for the **Advanced frequentist methods** stream of the [Summer School on Statistical Methods](https://vasishth.github.io/smlp2024/) to be held at the University of Potsdam, 9-13 September, 2024.

# Installation of tools prior to the course

This section of the summer school will use the [Julia programming language](https://julialang.org/) and related tools.
Because most students in the course will have more experience with [R](https://r-project.org) and the [RStudio](https://rstudio.com) integrated development environment (IDE), it is necessary to install and configure several software systems prior to the course.

## git

We will assume that you have git installed and are able to clone a repository from github.
If not, [Happy Git with R](https://happygitwithr.com/) is a good place to learn about git for data science.

The example data stored in the `data` folder is stored with [git-lfs](https://git-lfs.com/). You will need to install git-lfs to access this data, but then everything will "just" work.

This website is built using [quarto](https://quarto.org), described below, from the [repository](https://github.com/RePsychLing/SMLP2024).
Clone this repository with, e.g.

```sh
git clone https://github.com/RePsychLing/SMLP2024
```

## Julia Programming Language

We will use Julia v1.10 in the summer school. We recommend using [Juliaup](https://github.com/JuliaLang/juliaup) to install and manage Julia versions. Juliaup makes it trivial to upgrade to new Julia releases or even use old ones. Alternatively,  you can download the version appropriate for your setup from here: [Julia Programming Language](https://julialang.org/downloads/)

## Quarto

The web site and other documents for this course are rendered using a `knitr`-like system called Quarto. You can download the version appropriate for your setup from here: [quarto](https://quarto.org/docs/get-started/)

## Integrated Development Environment (IDE)

An integrated development environment (IDE) makes editing and running Julia and Quarto source files easier.
The "integrated development" portion is a clue to what makes them different than a text editor (even a text editor with syntax highlighting): they have tools for suggesting code completion, interacting with and running code and much more.  
Popular ones for R and Python include RStudio and Spyder. For Julia, we recommend [VS Code](https://code.visualstudio.com/download) or [Positron](https://github.com/posit-dev/positron/wiki#installing-positron). 
VS Code is widely used in the Julia community, while Positron is a new fork of VS Code aimed at data scientists and developed by the Posit, the folks behind RStudio and Quarto.

Whatever IDE you use, make sure to install the necessary extensions for Quarto and Julia. 

# Summary

We assume everybody will succeed with the installations. If not, please get in touch!

You may also want to give it a try to get these tools to play nicely with each other -- but don't spend too much time on this.
